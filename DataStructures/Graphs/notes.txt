        What is a Graph Data Structure?
.A graph data structure consists of a finite (and possibly mutable) set of vertices or nodes or points, together with a set of unordered pairs of these vertices for an undirected graph or a set of orered pairs for a directed graph. 

        Use for Graphs 
.Social Networks
.Location / Mapping
.Routing Algorithms
.Visual Hierarchy 
.File System Opimizations 

        Essential Graph Terms 
.Vertex - a node
.Edge - connection between nodes 
.Weighted/Unweighted - values assigned to distances between vertices 
.Directed/Undirected - directions assigned to distanced between vertices 

        Directed Graph 
            -> A        
          /
        B -> E  <- D
        |          ^
         -> C      |
                   F

        Weighted Graph 
            (10 A to E)
            A ---- E
(8 A to B) / 
          / (17 B to F)
          B ----- F 
(15 B to C)\      |      
            \     | (7 F to D)
             C -- D
            (20 C to D)

        Undirected Graph 
                A
             /     \
            B       E 
            |\     /|
            C \   / F
             \ \ / /
                D

        How do we store this?
.Using an adjacency matrix 

        EXAMPLE     
        A B C D E F                    A - B 
       -------------                  /    |
    A | 0 1 0 0 0 1                  F     C 
    B | 1 0 1 0 0 0                  |    /
    C | 0 1 0 1 0 0                  E - D 
    D | 0 0 1 0 1 0
    E | 0 0 0 1 0 1
    F | 1 0 0 0 1 0

.Using an adjacency list 

        [                                       0
      0    [1,5],                             /   \
      1    [0, 2],                           5     1
      2    [1, 3],                           |     |
      3    [2, 4],                           4     2
      4    [3, 5],                            \   /
      5    [4, 0]                               3
        ]
    
          {
            A: ["B", "F"],                       A
            B: ["A", "C"],                     /   \
            C: ["B", "D"],                    F     B
            D: ["C", "E"],                    |     |
            E: ["D", "F"],                    E     C
            F: ["E", "A"]                      \   /
          }                                      D
                                  