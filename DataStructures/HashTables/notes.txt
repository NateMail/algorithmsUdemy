        What is a Hash Table?
.Hash tables are used to store key-value pairs.
.They are like arrays, but the keys are not ordered.
.Unlike arrays, hash tables are fast for all of the following operations: finding values, adding new values, and removing value!

        The Hash Part 
.To impliment a hash tabe, we'll be using an array.
.In order to look up values by key, we need a way to convert keys into valid array indices. 
.A funciton that preforems this task is called a hash function. 

        What makes a good Hash?
.Fast(i.e constant time)
.Doesn't cluster outputs at specific indices, but distributes uniformly 
.Deterministic (same input yields same output)

        How to deal with collisions 
.Even with a large array and a great hash function, collisions are inevitable.
1.Seperate Chaining 
  .With separate chaning, at each index in our array we store values using a more sophisticated data structure(e.g. an array or a linked list).
  .This allows us to store multiple key-value pairs at the same index.
2.Linear Probing 
  .With linear probing, when we find a collision, we search through the array to find the next empty slot.
  .Unlike with separate chaining, this allows us to store a single key-value at each index. 